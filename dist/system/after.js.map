{"version":3,"sources":["after.js"],"names":[],"mappings":";;;kBAgBW,KAAK;;oBAVA,MAAM;;AAAf,WAAS,MAAM,CAAC,EAAE,EAAE,IAAI,EAAC;AAC9B,QAAG,EAAE,IAAI,YAAY,KAAK,CAAA,AAAC,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AAC3C,WAAO,YAAU;;;;AACf,UAAI,WAAW,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC5C,UAAI,CAAC,GAAG,CAAC,UAAA,IAAI,EAAE;AAAC,YAAI,CAAC,KAAK,mBAAiB,CAAA;OAAC,CAAC,CAAC;AAC9C,aAAO,WAAW,CAAC;KACpB,CAAA;GACF;;;;+BAbO,UAAU;;;AAgBP,WAAK,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC;;uBAAlC,KAAK","file":"after.js","sourceRoot":"/source/","sourcesContent":["import {Decorators} from './decorators';\n\n/**\n * After mutator\n * Executes other functions after executing the decorated function.\n */\nexport function _after(fn, args){\n  if(!(args instanceof Array)) args = [args];\n  return function(){\n    var returnValue = fn.apply(this, arguments);\n    args.map(func=>{func.apply(this, arguments)});\n    return returnValue;\n  }\n}\n\n//create a decorator from the mutator\nexport var after = Decorators.mutator(_after);\n"]}