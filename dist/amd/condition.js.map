{"version":3,"sources":["condition.js"],"names":[],"mappings":";;;;;;UAOgB,UAAU,GAAV,UAAU;;AAAnB,WAAS,UAAU,CAAC,EAAE,EAAE,UAAU,EAAC;AACxC,WAAO,YAAiB;;;wCAAL,IAAI;AAAJ,YAAI;;;AACrB,UAAI,MAAM,YAAA,CAAC;AACX,UAAG,UAAU,CAAC,CAAC,CAAC,YAAY,KAAK,EAAC;AAChC,YAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACjD,kBAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;OAC5B;;AAED,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,gBAAU,CAAC,GAAG,CAAC,UAAA,SAAS,EAAE;AACxB,YAAG,SAAS,CAAC,KAAK,OAAM,KAAK,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;OACjD,CAAC,CAAC;;AAEH,UAAG,IAAI,EAAE,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,KAChC,IAAG,MAAM,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAE3E,CAAA;GACF;;AAGM,MAAI,SAAS,GAAG,YA3Bf,UAAU,CA2BgB,OAAO,CAAC,UAAU,CAAC,CAAC;UAA3C,SAAS,GAAT,SAAS","file":"condition.js","sourceRoot":"/source/","sourcesContent":["import {Decorators} from './decorators';\n\n/**\n * Condition mutator\n *\n * Executes the decorated function only if a condition is met\n */\nexport function _condition(fn, conditions){\n  return function(...args){\n    let fnElse;\n    if(conditions[0] instanceof Array){\n      if(conditions.length > 1) fnElse = conditions[1];\n      conditions = conditions[0];\n    }\n\n    var pass = true;\n    conditions.map(condition=>{\n      if(condition.apply(this) !== true) pass = false;\n    });\n\n    if(pass) return fn.apply(this, args);\n    else if(fnElse && typeof fnElse === \"function\") return fnElse.apply(this);\n\n  }\n}\n\n//create a decorator from the mutator\nexport var condition = Decorators.mutator(_condition);\n"]}