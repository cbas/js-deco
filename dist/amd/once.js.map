{"version":3,"sources":["once.js"],"names":[],"mappings":";;;;;;UAUgB,KAAK,GAAL,KAAK;;AAAd,WAAS,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAC;AAClC,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;AAExB,WAAO,YAAU;AACf,UAAI,SAAS,GAAG,UAAU,CAAC;AAC3B,UAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,OAAO,EAAE,CAAC;AACnD,UAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;;AAE5B,UAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,EAAC;AAC/B,YAAG,IAAI,EAAC;AACN,cAAI,KAAK,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACzC,cAAG,IAAI,KAAK,OAAO,EAAE,MAAM,KAAK,CAAC;AACjC,cAAG,OAAO,IAAI,KAAK,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACvD;AACD,eAAO;OACR;AACD,WAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AAC3B,aAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KAClC,CAAA;GACF;;AAGM,MAAI,IAAI,GAAG,YAjCV,UAAU,CAiCW,OAAO,CAAC,KAAK,CAAC,CAAC;UAAjC,IAAI,GAAJ,IAAI","file":"once.js","sourceRoot":"/source/","sourcesContent":["import {Decorators} from './decorators';\n\n/**\n * Once mutator\n *\n * Makes sure a function is only executed once.\n *\n * if the first parameter is set to \"throw\" then a \"alreadyExecuted\" Error will be thrown if the function is called more than once\n * The first parameter can also be a function that will be executed when the decorated function is called more than once.\n */\nexport function _once(fn, args, key){\n  var mode = null;\n  if(args) mode = args[0];\n\n  return function(){\n    var cacheProp = \"__once__\";\n    this[cacheProp] = this[cacheProp] || new WeakMap();\n    let cache = this[cacheProp];\n\n    if(cache.get(this[key]) === true){\n      if(mode){\n        var error = new Error(\"alreadyExecuted\");\n        if(mode === \"throw\") throw error;\n        if(typeof mode === \"function\") mode.call(this, error);\n      }\n      return;\n    }\n    cache.set(this[key], true);\n    return fn.apply(this, arguments);\n  }\n}\n\n//create a decorator from the mutator\nexport var once = Decorators.mutator(_once);\n"]}