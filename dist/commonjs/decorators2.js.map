{"version":3,"sources":["decorators2.js"],"names":[],"mappings":"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","file":"decorators2.js","sourceRoot":"/source/","sourcesContent":["import {chain as _chain} from \"./method/chain\";\nimport {before as _before} from \"./method/before\";\nimport {after as _after} from \"./method/after\";\nimport {curry as _curry} from \"./method/curry\";\nimport {condition as _condition} from \"./method/condition\";\nimport {memoize as _memoize} from \"./method/memoize\";\nimport {once as _once} from \"./method/once\";\n\n//create decorators from method mutators\nexport var chain = createMethodDecorator(_chain);\nexport var before = createMethodDecorator(_before);\nexport var after = createMethodDecorator(_after);\nexport var once = createMethodDecorator(_once);\nexport var condition = createMethodDecorator(_condition);\nexport var memoize = createMethodFromMutator(_memoize);\nexport var curry = createMethodDecorator(_curry);\n//export var autobind = createMethodDecorator(_autobind);\n\n\n\nfunction createMethodFromMutator(fn){\n\n  return function(...args){\n    if(args.length){\n\n    }\n    console.log('createMethodFromMutator deco1', args);\n\n    return function(target,key,descriptor){\n      console.log('createMethodFromMutator deco2', arguments);\n      descriptor.value = fn(descriptor.value,args, key);\n      return descriptor;\n\n    }\n  }\n}\n/**\n * Creates a decorator that can be used with or without\n *\n * @param fn {Function}   The decorator function to create\n * @returns {Function}\n */\nfunction createMethodDecorator(fn){\n  //console.log('createMethodDecorator', arguments);\n  return function wrapDecorator(...args){\n    //console.log('createMethodDecorator deco', arguments);\n\n    if(args.length > 2 && args[2].enumerable !== undefined){\n\n      return decoratorWrapper.apply(this, args.concat([fn]));\n    }else{\n      return function(...decoratorArgs){\n        return decoratorWrapper.apply(this, decoratorArgs.concat([fn, args]));\n      }\n    }\n  };\n}\n\nfunction decoratorWrapper(target, key, descriptor, fn, args){\n  let {get, set, value} = descriptor;\n\n  if(typeof get === \"function\"){\n    descriptor.get = fn(value, args, key);\n  }else if(typeof set === \"function\"){\n    descriptor.set = fn(value, args, key);\n  }else if(typeof value === \"function\"){\n    descriptor.value = fn(value, args, key);\n  }\n  return descriptor;\n}\n\nexport default function mixin(_instance){\n  let decorators = {};\n  each(methodDecorators, (method) =>{\n    if(has(_instance, method)){\n      decorators[method] = createMethodDecorator(_instance[method]);\n    }\n  });\n  return decorators;\n}\n"]}