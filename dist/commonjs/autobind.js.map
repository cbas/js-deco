{"version":3,"sources":["autobind.js"],"names":[],"mappings":";;;;;QAMgB,SAAS,GAAT,SAAS;;0BANA,cAAc;;AAMhC,SAAS,SAAS,CAAC,MAAM,EAAC,GAAG,EAAC,UAAU,EAAC,IAAI,EAAC;AACnD,MAAI,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC;AAC1B,MAAI,OAAO,EAAE,KAAK,UAAU,EAAE,MAAM,IAAI,KAAK,8DAA4D,OAAO,EAAE,CAAG,CAAC;;AAEtH,MAAG,CAAC,GAAG,EAAC;AAEN,WAAO,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;AAC/C,UAAI,GAAG,KAAK,aAAa,EAAE,OAAO;AAClC,UAAI,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AACxE,UAAI,OAAO,UAAU,CAAC,KAAK,KAAK,UAAU,EAAE,OAAO;AACnD,YAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,EAAE,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC;KACpF,CAAC,CAAC;AACH,WAAO,MAAM,CAAC;GACf;;AAED,SAAO;AACL,gBAAY,EAAE,IAAI;AAClB,OAAG,EAAA,eAAG;AACJ,UAAI,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,YAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;AAC/B,aAAK,EAAE,OAAO;AACd,oBAAY,EAAE,IAAI;AAClB,gBAAQ,EAAE,IAAI;OACf,CAAC,CAAC;AACH,aAAO,OAAO,CAAC;KAChB;GACF,CAAC;CACH;;AAEM,IAAI,QAAQ,GAAG,YAnCd,UAAU,CAmCe,SAAS,CAAC,SAAS,CAAC,CAAC;QAA3C,QAAQ,GAAR,QAAQ","file":"autobind.js","sourceRoot":"/source/","sourcesContent":["import {Decorators} from './decorators';\n\n/**\n * Autobind mutator\n * Makes sure a class method is always called with the this binding.\n */\nexport function _autobind(target,key,descriptor,args){\n  var fn = descriptor.value;\n  if (typeof fn !== 'function') throw new Error(`@autobind decorator can only be applied to methods not: ${typeof fn}`);\n\n  if(!key){\n    // (Using reflect to get all keys including symbols)\n    Reflect.ownKeys(target.prototype).forEach(key => {\n      if (key === 'constructor') return;\n      let descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n      if (typeof descriptor.value !== 'function') return;\n      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));\n    });\n    return target;\n  }\n\n  return {\n    configurable: true,\n    get() {\n      let boundFn = fn.bind(this);\n      Object.defineProperty(this, key, {\n        value: boundFn,\n        configurable: true,\n        writable: true\n      });\n      return boundFn;\n    }\n  };\n}\n\nexport var autobind = Decorators.decorator(_autobind);\n"]}